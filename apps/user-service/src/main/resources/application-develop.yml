spring:
  config:
    activate:
      on-profile: develop

  docker:
    compose:
      file: docker/local/docker-compose.yml # IDE에서 final-4team-icebang을 root로 열어야 합니다.
      lifecycle-management: start_only

  # MariaDB 데이터베이스 연결 설정
  datasource:
    url: jdbc:mariadb://localhost:3306/pre_process
    username: mariadb
    password: qwer1234
    driver-class-name: org.mariadb.jdbc.Driver

  hikari:
    connection-timeout: 30000
    idle-timeout: 600000
    max-lifetime: 1800000
    maximum-pool-size: 10
    minimum-idle: 5
    pool-name: HikariCP-MyBatis

  sql:
    init:
      mode: always
      schema-locations:
        - classpath:sql/00-drop-maria.sql
        - classpath:sql/01-schema.sql
      data-locations:
        - classpath:sql/00-truncate.sql
        - classpath:sql/01-insert-internal-users.sql
        - classpath:sql/02-insert-external-users.sql
        - classpath:sql/03-insert-workflow.sql
      encoding: UTF-8

#  # Spring Quartz 스케줄러 설정
#  quartz:
#    job-store-type: jdbc
#    auto-startup: true
#    jdbc:
#      initialize-schema: embedded # 운영 환경을 기준으로 기본값 설정
#    properties:
#      org.quartz.scheduler.instanceId: AUTO
#      org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
#      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#      org.quartz.jobStore.tablePrefix: QRTZ_ # Quartz 테이블 접두사
#      org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
#      org.quartz.threadPool.threadCount: 5 # 개발 환경 스레드 수

mybatis:
  mapper-locations: classpath:mybatis/mapper/**/*.xml
  type-aliases-package: site.icebang.dto
  configuration:
    map-underscore-to-camel-case: true

logging:
  config: classpath:log4j2-develop.yml

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0   # 100% 샘플링 (개발 환경에서만 권장)