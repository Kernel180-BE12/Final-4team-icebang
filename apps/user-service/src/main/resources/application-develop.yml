spring:
  config:
    activate:
      on-profile: develop

  docker:
    compose:
      file: docker/local/docker-compose.yml # IDE에서 final-4team-icebang을 root로 열어야 합니다.
      lifecycle-management: start_only

  # MariaDB 데이터베이스 연결 설정
  datasource:
    url: jdbc:mariadb://localhost:3306/pre_process
    username: mariadb
    password: qwer1234
    driver-class-name: org.mariadb.jdbc.Driver

  hikari:
    connection-timeout: 30000
    idle-timeout: 600000
    max-lifetime: 1800000
    maximum-pool-size: 10
    minimum-idle: 5
    pool-name: HikariCP-MyBatis

  quartz:
    job-store-type: jdbc
    auto-startup: true
    # 📌 Quartz 전용 DataSource 설정을 여기에 추가
    datasource:
      url: jdbc:mariadb://localhost:3306/pre_process?serverTimezone=UTC
      username: mariadb
      password: qwer1234
      driver-class-name: org.mariadb.jdbc.Driver
      hikari:
        pool-name: HikariCP-Quartz
        maximum-pool-size: 5 # Quartz 전용 풀은 더 작게 설정
    # 📌 Quartz의 자동 스키마 생성 기능 사용
    jdbc:
      initialize-schema: never
      platform: mysql # MariaDB는 mysql 스크립트와 호환

  sql:
    init:
      mode: always
      schema-locations:
        - classpath:sql/schema/00-drop-maria.sql
        - classpath:sql/schema/01-schema.sql
        - classpath:sql/schema/02-quartz-schema.sql
        - classpath:sql/schema/03-schema-mariadb-timezone.sql
      data-locations:
        - classpath:sql/data/00-truncate.sql
        - classpath:sql/data/01-insert-internal-users.sql
        - classpath:sql/data/02-insert-external-users.sql
        - classpath:sql/data/03-insert-workflow.sql
        - classpath:sql/data/05-fix-timezone-data.sql
      encoding: UTF-8

mybatis:
  mapper-locations: classpath:mybatis/mapper/**/*.xml
  type-aliases-package: site.icebang.domain
  configuration:
    map-underscore-to-camel-case: true

logging:
  config: classpath:log4j2-develop.yml

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0   # 100% 샘플링 (개발 환경에서만 권장)